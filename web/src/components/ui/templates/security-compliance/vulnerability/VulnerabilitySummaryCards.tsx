import React from 'react';
import { Card } from '@/components/ui/organisms/card';
import { Progress } from '@/components/ui/organisms/progress';
import { AlertTriangle, CheckCircle, ShieldAlert } from 'lucide-react';

interface VulnerabilitySummaryCardsProps {
  severityCounts: {
    critical: number;
    high: number;
    medium: number;
    low: number;
  };
  totalFindings: number;
  fixedFindings: number;
}

export const VulnerabilitySummaryCards: React.FC<VulnerabilitySummaryCardsProps> = ({
  severityCounts,
  totalFindings,
  fixedFindings
}) => {
  // Calculate total active vulnerabilities
  const activeFindings = totalFindings - fixedFindings;
  
  // Calculate percentage fixed
  const percentFixed = totalFindings > 0 
    ? Math.round((fixedFindings / totalFindings) * 100) 
    : 0;
  
  // Calculate overall risk score (weighted by severity)
  const riskScore = Math.min(100, Math.round(
    ((severityCounts.critical * 10) + 
     (severityCounts.high * 5) + 
     (severityCounts.medium * 2) + 
     (severityCounts.low * 1)) / (totalFindings || 1) * 10
  ));
  
  // Get risk level label
  const getRiskLevel = (score: number) => {
    if (score >= 70) return { label: 'Crítico', color: 'text-red-600 dark:text-red-500' };
    if (score >= 50) return { label: 'Alto', color: 'text-orange-600 dark:text-orange-500' };
    if (score >= 30) return { label: 'Médio', color: 'text-yellow-600 dark:text-yellow-500' };
    return { label: 'Baixo', color: 'text-green-600 dark:text-green-500' };
  };
  
  const { label: riskLabel, color: riskColor } = getRiskLevel(riskScore);

  return (
    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
      {/* Card 1: Risk Score */}
      <Card className="p-4 border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900">
        <div className="flex items-center justify-between mb-2">
          <h3 className="text-sm font-medium text-gray-500 dark:text-gray-400">Nível de Risco</h3>
          <ShieldAlert className={`h-5 w-5 ${riskColor}`} />
        </div>
        <div className="flex justify-between items-end">
          <div className="space-y-1">
            <div className={`text-2xl font-bold ${riskColor}`}>{riskLabel}</div>
            <div className="text-xs text-gray-500 dark:text-gray-400">Score: {riskScore}/100</div>
          </div>
          <div className="space-y-1 text-right">
            <div className="text-xs font-medium text-gray-700 dark:text-gray-300">Total</div>
            <div className="text-lg font-bold text-gray-900 dark:text-white">{totalFindings}</div>
          </div>
        </div>
        <Progress 
          value={riskScore} 
          className="h-1.5 mt-2 bg-gray-200 dark:bg-gray-700" 
          indicatorClassName={
            riskScore >= 70 ? 'bg-red-500' : 
            riskScore >= 50 ? 'bg-orange-500' : 
            riskScore >= 30 ? 'bg-yellow-500' : 
            'bg-green-500'
          }
        />
      </Card>
      
      {/* Card 2: Severity Breakdown */}
      <Card className="p-4 border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900">
        <div className="flex items-center justify-between mb-3">
          <h3 className="text-sm font-medium text-gray-500 dark:text-gray-400">Por Severidade</h3>
          <AlertTriangle className="h-5 w-5 text-yellow-500" />
        </div>
        <div className="space-y-2">
          <div className="flex justify-between items-center text-xs">
            <span className="text-red-600 dark:text-red-500 font-medium">Crítico</span>
            <span className="font-medium text-gray-900 dark:text-white">{severityCounts.critical}</span>
          </div>
          <Progress value={severityCounts.critical ? 100 : 0} className="h-1.5 bg-red-100 dark:bg-red-900/30" indicatorClassName="bg-red-600 dark:bg-red-500" />
          
          <div className="flex justify-between items-center text-xs">
            <span className="text-orange-600 dark:text-orange-500 font-medium">Alto</span>
            <span className="font-medium text-gray-900 dark:text-white">{severityCounts.high}</span>
          </div>
          <Progress value={severityCounts.high ? 100 : 0} className="h-1.5 bg-orange-100 dark:bg-orange-900/30" indicatorClassName="bg-orange-600 dark:bg-orange-500" />
          
          <div className="flex justify-between items-center text-xs">
            <span className="text-yellow-600 dark:text-yellow-500 font-medium">Médio</span>
            <span className="font-medium text-gray-900 dark:text-white">{severityCounts.medium}</span>
          </div>
          <Progress value={severityCounts.medium ? 100 : 0} className="h-1.5 bg-yellow-100 dark:bg-yellow-900/30" indicatorClassName="bg-yellow-600 dark:bg-yellow-500" />
          
          <div className="flex justify-between items-center text-xs">
            <span className="text-green-600 dark:text-green-500 font-medium">Baixo</span>
            <span className="font-medium text-gray-900 dark:text-white">{severityCounts.low}</span>
          </div>
          <Progress value={severityCounts.low ? 100 : 0} className="h-1.5 bg-green-100 dark:bg-green-900/30" indicatorClassName="bg-green-600 dark:bg-green-500" />
        </div>
      </Card>
      
      {/* Card 3: Remediation Progress */}
      <Card className="p-4 border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900">
        <div className="flex items-center justify-between mb-2">
          <h3 className="text-sm font-medium text-gray-500 dark:text-gray-400">Progresso de Remediação</h3>
          <CheckCircle className="h-5 w-5 text-green-500" />
        </div>
        <div className="flex justify-between items-end mb-2">
          <div className="space-y-1">
            <div className="text-2xl font-bold text-gray-900 dark:text-white">{percentFixed}%</div>
            <div className="text-xs text-gray-500 dark:text-gray-400">Corrigidos</div>
          </div>
          <div className="space-y-1 text-right">
            <div className="text-xs font-medium text-gray-700 dark:text-gray-300">Vulnerabilidades</div>
            <div className="text-lg font-bold text-gray-900 dark:text-white">{fixedFindings} / {totalFindings}</div>
          </div>
        </div>
        <Progress 
          value={percentFixed} 
          className="h-1.5 bg-gray-200 dark:bg-gray-700"
          indicatorClassName="bg-green-500"
        />
        <div className="mt-2 text-xs text-gray-500 dark:text-gray-400">
          {activeFindings > 0 
            ? `${activeFindings} vulnerabilidades pendentes de correção`
            : 'Todas as vulnerabilidades foram corrigidas!'
          }
        </div>
      </Card>
      
      {/* Card 4: Risk Distribution */}
      <Card className="p-4 border border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-900">
        <div className="flex items-center justify-between mb-2">
          <h3 className="text-sm font-medium text-gray-500 dark:text-gray-400">Distribuição de Riscos</h3>
        </div>
        {totalFindings > 0 ? (
          <div className="space-y-3">
            <div className="flex items-end h-32">
              {[
                { count: severityCounts.critical, color: 'bg-red-500', label: 'Crítico' },
                { count: severityCounts.high, color: 'bg-orange-500', label: 'Alto' },
                { count: severityCounts.medium, color: 'bg-yellow-500', label: 'Médio' },
                { count: severityCounts.low, color: 'bg-green-500', label: 'Baixo' }
              ].map((item, index) => {
                const percentage = Math.round((item.count / totalFindings) * 100);
                return (
                  <div key={index} className="flex-1 flex flex-col items-center">
                    <div 
                      className={`w-full mx-1 ${item.color} rounded-t`}
                      style={{ height: `${Math.max(5, percentage)}%` }}
                    ></div>
                    <div className="text-xs font-medium text-gray-900 dark:text-white mt-1">{item.count}</div>
                    <div className="text-xs text-gray-500 dark:text-gray-400 mt-1">
                      {percentage}%
                    </div>
                  </div>
                );
              })}
            </div>
            <div className="grid grid-cols-4 gap-1 text-xs text-center">
              <div className="text-red-600 dark:text-red-500">Crítico</div>
              <div className="text-orange-600 dark:text-orange-500">Alto</div>
              <div className="text-yellow-600 dark:text-yellow-500">Médio</div>
              <div className="text-green-600 dark:text-green-500">Baixo</div>
            </div>
          </div>
        ) : (
          <div className="flex items-center justify-center h-32 text-center text-gray-400 dark:text-gray-600">
            <div>
              <ShieldAlert className="h-10 w-10 mx-auto mb-2" />
              <div className="text-sm">Sem dados</div>
            </div>
          </div>
        )}
      </Card>
    </div>
  );
};